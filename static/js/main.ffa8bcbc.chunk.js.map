{"version":3,"sources":["components/addMovieDialog.js","components/editMovieDialog.js","components/movieContainer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","container","display","flexDirection","justifyContent","minWidth","minHeight","maxWidth","maxHeight","backgroundColor","position","close","top","left","dataContainer","height","marginTop","padding","input","marginBottom","AddMovieDialog","props","classes","open","setDisplayAddMovie","addMovie","useState","title","setTitle","year","setYear","rating","setRaiting","actor","setActor","movieIndex","setMovieIndex","Dialog","className","Button","onClick","TextField","placeholder","onChange","e","target","value","errStr","Array","keys","map","x","includes","length","alert","id","EditMovieDialog","setDisplayEditMovie","movie","updateMovies","data","setData","useEffect","alignItems","width","row","rowBtns","addBtn","addBtnWrapper","MovieContainer","movies","setMovies","displayAddMovie","displayEditMovie","movieToEdit","setMovieToEdit","incomingMovie","updatedMovie","console","log","tempMovies","push","variant","TableContainer","component","Paper","Table","sx","TableHead","TableRow","TableCell","align","TableBody","i","border","scope","handleEdit","style","handleRemove","textAlign","root","bottom","right","overflowY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffa8bcbc.chunk.js","sourcesContent":["import { Button, Dialog, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    minWidth: 600,\r\n    minHeight: 400,\r\n    maxWidth: \"auto\",\r\n    maxHeight: \"auto\",\r\n    backgroundColor: \"white\",\r\n    position: \"relative\",\r\n  },\r\n  close: {\r\n    position: \"absolute\",\r\n    top: 10,\r\n    left: 10,\r\n  },\r\n  dataContainer: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: 60,\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport const AddMovieDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { open, setDisplayAddMovie, addMovie } = props;\r\n  const [title, setTitle] = useState(null);\r\n  const [year, setYear] = useState(null);\r\n  const [rating, setRaiting] = useState(null);\r\n  const [actor, setActor] = useState(null);\r\n  const [movieIndex, setMovieIndex] = useState(0);\r\n\r\n  const close = () => {\r\n    setTitle(null);\r\n    setYear(null);\r\n    setRaiting(null);\r\n    setActor(null);\r\n    setDisplayAddMovie(false);\r\n  };\r\n\r\n  const handleAddMovie = () => {\r\n    let errStr = \"\";\r\n\r\n    if (!title) {\r\n      errStr = errStr + \"* Must have a title\\n\";\r\n    }\r\n    if (!year || !+year) {\r\n      errStr = errStr + \"* Must have a valid year\\n\";\r\n    }\r\n    if (\r\n      !rating ||\r\n      !+rating ||\r\n      ![...Array(11).keys()].map((x) => x++).includes(+rating)\r\n    ) {\r\n      errStr = errStr + \"* Must have a valid rating\\n\";\r\n    }\r\n    if (!actor) {\r\n      errStr = errStr + \"* Must have an actor\\n\";\r\n    }\r\n\r\n    if (errStr && errStr.length) {\r\n      alert(errStr);\r\n      setDisplayAddMovie(true);\r\n      return;\r\n    }\r\n\r\n    //if all successful\r\n    addMovie({ id: movieIndex, title, year, rating, actor });\r\n    setMovieIndex(movieIndex + 1);\r\n    setDisplayAddMovie(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open}>\r\n      <div className={classes.container}>\r\n        <div className={classes.close}>\r\n          <Button onClick={close}>X</Button>\r\n        </div>\r\n        <div className={classes.dataContainer}>\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Title\"}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Year\"}\r\n            onChange={(e) => setYear(e.target.value)}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Rating\"}\r\n            onChange={(e) => setRaiting(e.target.value)}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Actor\"}\r\n            onChange={(e) => setActor(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button onClick={handleAddMovie}>Add</Button>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { Button, Dialog, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    minWidth: 600,\r\n    minHeight: 400,\r\n    maxWidth: \"auto\",\r\n    maxHeight: \"auto\",\r\n    backgroundColor: \"white\",\r\n    position: \"relative\",\r\n  },\r\n  close: {\r\n    position: \"absolute\",\r\n    top: 10,\r\n    left: 10,\r\n  },\r\n  dataContainer: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: 60,\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport const EditMovieDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { open, setDisplayEditMovie, movie, updateMovies } = props;\r\n  const [data, setData] = useState(null);\r\n  const [title, setTitle] = useState(data?.title);\r\n  const [year, setYear] = useState(data?.year);\r\n  const [rating, setRaiting] = useState(data?.rating);\r\n  const [actor, setActor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setData(movie);\r\n  }, [movie]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setTitle(data.title);\r\n      setYear(data.year);\r\n      setRaiting(data.rating);\r\n      setActor(data.actor);\r\n    }\r\n  }, [data, open]);\r\n\r\n  const close = () => {\r\n    setDisplayEditMovie(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    let errStr = \"\";\r\n\r\n    if (!title) {\r\n      errStr = errStr + \"* Must have a title\\n\";\r\n    }\r\n    if (!year || !+year) {\r\n      errStr = errStr + \"* Must have a valid year\\n\";\r\n    }\r\n    if (\r\n      !rating ||\r\n      !+rating ||\r\n      ![...Array(11).keys()].map((x) => x++).includes(+rating)\r\n    ) {\r\n      errStr = errStr + \"* Must have a valid rating\\n\";\r\n    }\r\n    if (!actor) {\r\n      errStr = errStr + \"* Must have an actor\\n\";\r\n    }\r\n\r\n    if (errStr && errStr.length) {\r\n      alert(errStr);\r\n      setDisplayEditMovie(true);\r\n      return;\r\n    }\r\n\r\n    updateMovies({ id: data.id, title, year, rating, actor });\r\n    close();\r\n  };\r\n\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open}>\r\n      <div className={classes.container}>\r\n        <div className={classes.close}>\r\n          <Button onClick={close}>X</Button>\r\n        </div>\r\n        <div className={classes.dataContainer}>\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Title\"}\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Year\"}\r\n            value={year}\r\n            onChange={(e) => setYear(+e.target.value)}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Rating\"}\r\n            value={rating}\r\n            onChange={(e) => setRaiting(e.target.value)}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            placeholder={\"Actor\"}\r\n            value={actor}\r\n            onChange={(e) => setActor(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button onClick={handleConfirm}>Confirm</Button>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Button } from \"@mui/material\";\r\nimport { AddMovieDialog } from \"./addMovieDialog\";\r\nimport { EditMovieDialog } from \"./editMovieDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    maxWidth: 800,\r\n  },\r\n  row: {},\r\n  rowBtns: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  addBtn: {\r\n    marginTop: 20,\r\n    width: 200,\r\n  },\r\n  addBtnWrapper: {\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport const MovieContainer = (props) => {\r\n  const classes = useStyles();\r\n  const [movies, setMovies] = useState([]);\r\n  const [displayAddMovie, setDisplayAddMovie] = useState(false);\r\n  const [displayEditMovie, setDisplayEditMovie] = useState(false);\r\n  const [movieToEdit, setMovieToEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setMovies();\r\n  }, []);\r\n\r\n  const handleEdit = (id) => {\r\n    for (const movie of movies) {\r\n      if (movie.id === id) {\r\n        setMovieToEdit(movie);\r\n        setDisplayEditMovie(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addMovie = (incomingMovie) => {\r\n    if (movies?.length) {\r\n      setMovies([...movies, incomingMovie]);\r\n    } else {\r\n      setMovies([incomingMovie]);\r\n    }\r\n  };\r\n\r\n  const updateMovies = (updatedMovie) => {\r\n    console.log({ updatedMovie });\r\n    let tempMovies = [];\r\n    for (const movie of movies) {\r\n      console.log(\"movie.id\", movie.id);\r\n      console.log(updatedMovie);\r\n      if (movie.id === updatedMovie.id) {\r\n        tempMovies.push(updatedMovie);\r\n      } else {\r\n        tempMovies.push(movie);\r\n      }\r\n    }\r\n    console.log(tempMovies);\r\n    setMovies(tempMovies);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    let tempMovies = [];\r\n\r\n    for (const movie of movies) {\r\n      if (movie.id !== id) {\r\n        tempMovies.push(movie);\r\n      }\r\n    }\r\n\r\n    setMovies(tempMovies);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <AddMovieDialog\r\n        open={displayAddMovie}\r\n        setDisplayAddMovie={setDisplayAddMovie}\r\n        addMovie={addMovie}\r\n      />\r\n      <EditMovieDialog\r\n        open={displayEditMovie}\r\n        setDisplayEditMovie={setDisplayEditMovie}\r\n        updateMovies={updateMovies}\r\n        movie={movieToEdit}\r\n      />\r\n      <div className={classes.addBtnWrapper}>\r\n        <Button\r\n          className={classes.addBtn}\r\n          variant=\"contained\"\r\n          onClick={() => setDisplayAddMovie(true)}\r\n        >\r\n          Add movie\r\n        </Button>\r\n      </div>\r\n      {movies ? (\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell align=\"right\">Year</TableCell>\r\n                <TableCell align=\"right\">Rating (1-10)</TableCell>\r\n                <TableCell align=\"right\">Actor</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {movies.map((row, i) => (\r\n                <TableRow\r\n                  className={classes.row}\r\n                  key={row.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.title}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.year}</TableCell>\r\n                  <TableCell align=\"right\">{row.rating}</TableCell>\r\n                  <TableCell align=\"right\">{row.actor}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <div className={classes.rowBtns}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => handleEdit(row.id)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        style={{ backgroundColor: \"red\" }}\r\n                        variant=\"contained\"\r\n                        onClick={() => handleRemove(row.id)}\r\n                      >\r\n                        X\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      ) : (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          Det finns inga filmer i databasen, lägg till via knappen \"Add Movie\"\r\n          <br />\r\n          Databasen är en mockad databas och kommer att nollställas vid\r\n          siduppdatering\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { MovieContainer } from \"./components/movieContainer\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflowY: \"hidden\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MovieContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}